{"ast":null,"code":"var _jsxFileName = \"/Users/johnalvarez/Desktop/react project folder/login firebase graphs/src/Charts/DoughnutChart.js\";\nimport React from 'react';\nimport { ArcElement, Tooltip, Legend, Chart as ChartJS } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst DoughNutChart = _ref => {\n  let {\n    country,\n    setCountry,\n    chosenCountry,\n    setChosenCountry\n  } = _ref;\n  const labels = ['Population', 'Cases', 'Recovered', 'Deaths'];\n  const data = {\n    labels: labels,\n    datasets: [{\n      label: chosenCountry.response ? chosenCountry.response[0].country : 'USA',\n      data: [chosenCountry.response ? chosenCountry.response[0].population : 'Population', chosenCountry.response ? chosenCountry.response[0].cases.total : 'Cases', chosenCountry.response ? chosenCountry.response[0].cases.recovered : 'Recovered', chosenCountry.response ? chosenCountry.response[0].deaths.total : 'Deaths'],\n      backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(255, 205, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(201, 203, 207, 0.2)'],\n      borderColor: ['rgb(255, 99, 132)', 'rgb(255, 159, 64)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(54, 162, 235)', 'rgb(153, 102, 255)', 'rgb(201, 203, 207)'],\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    maintainAspectRatio: false,\n    responsive: true,\n    legend: {\n      labels: {\n        font: {\n          size: 20\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Doughnut, {\n      options: options,\n      height: 400,\n      width: 600,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DoughNutChart;\nexport default DoughNutChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoughNutChart\");","map":{"version":3,"names":["React","ArcElement","Tooltip","Legend","Chart","ChartJS","Doughnut","register","DoughNutChart","country","setCountry","chosenCountry","setChosenCountry","labels","data","datasets","label","response","population","cases","total","recovered","deaths","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","responsive","legend","font","size"],"sources":["/Users/johnalvarez/Desktop/react project folder/login firebase graphs/src/Charts/DoughnutChart.js"],"sourcesContent":["import React from 'react';\nimport { ArcElement, Tooltip, Legend, Chart as ChartJS } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst DoughNutChart = ({\n  country,\n  setCountry,\n  chosenCountry,\n  setChosenCountry,\n}) => {\n  const labels = ['Population', 'Cases', 'Recovered', 'Deaths'];\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        label: chosenCountry.response\n          ? chosenCountry.response[0].country\n          : 'USA',\n        data: [\n          chosenCountry.response\n            ? chosenCountry.response[0].population\n            : 'Population',\n          chosenCountry.response\n            ? chosenCountry.response[0].cases.total\n            : 'Cases',\n          chosenCountry.response\n            ? chosenCountry.response[0].cases.recovered\n            : 'Recovered',\n          chosenCountry.response\n            ? chosenCountry.response[0].deaths.total\n            : 'Deaths',\n        ],\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(255, 159, 64, 0.2)',\n          'rgba(255, 205, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(201, 203, 207, 0.2)',\n        ],\n        borderColor: [\n          'rgb(255, 99, 132)',\n          'rgb(255, 159, 64)',\n          'rgb(255, 205, 86)',\n          'rgb(75, 192, 192)',\n          'rgb(54, 162, 235)',\n          'rgb(153, 102, 255)',\n          'rgb(201, 203, 207)',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    maintainAspectRatio: false,\n    responsive: true,\n\n    legend: {\n      labels: {\n        font: {\n          size: 20,\n        },\n      },\n    },\n  };\n\n  return (\n    <div>\n      <Doughnut options={options} height={400} width={600} data={data} />\n    </div>\n  );\n};\n\nexport default DoughNutChart;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,MAA9B,EAAsCC,KAAK,IAAIC,OAA/C,QAA8D,UAA9D;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEAD,OAAO,CAACE,QAAR,CAAiBN,UAAjB,EAA6BC,OAA7B,EAAsCC,MAAtC;;AAEA,MAAMK,aAAa,GAAG,QAKhB;EAAA,IALiB;IACrBC,OADqB;IAErBC,UAFqB;IAGrBC,aAHqB;IAIrBC;EAJqB,CAKjB;EACJ,MAAMC,MAAM,GAAG,CAAC,YAAD,EAAe,OAAf,EAAwB,WAAxB,EAAqC,QAArC,CAAf;EAEA,MAAMC,IAAI,GAAG;IACXD,MAAM,EAAEA,MADG;IAEXE,QAAQ,EAAE,CACR;MACEC,KAAK,EAAEL,aAAa,CAACM,QAAd,GACHN,aAAa,CAACM,QAAd,CAAuB,CAAvB,EAA0BR,OADvB,GAEH,KAHN;MAIEK,IAAI,EAAE,CACJH,aAAa,CAACM,QAAd,GACIN,aAAa,CAACM,QAAd,CAAuB,CAAvB,EAA0BC,UAD9B,GAEI,YAHA,EAIJP,aAAa,CAACM,QAAd,GACIN,aAAa,CAACM,QAAd,CAAuB,CAAvB,EAA0BE,KAA1B,CAAgCC,KADpC,GAEI,OANA,EAOJT,aAAa,CAACM,QAAd,GACIN,aAAa,CAACM,QAAd,CAAuB,CAAvB,EAA0BE,KAA1B,CAAgCE,SADpC,GAEI,WATA,EAUJV,aAAa,CAACM,QAAd,GACIN,aAAa,CAACM,QAAd,CAAuB,CAAvB,EAA0BK,MAA1B,CAAiCF,KADrC,GAEI,QAZA,CAJR;MAkBEG,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,EAGf,yBAHe,EAIf,yBAJe,EAKf,yBALe,EAMf,0BANe,EAOf,0BAPe,CAlBnB;MA2BEC,WAAW,EAAE,CACX,mBADW,EAEX,mBAFW,EAGX,mBAHW,EAIX,mBAJW,EAKX,mBALW,EAMX,oBANW,EAOX,oBAPW,CA3Bf;MAoCEC,WAAW,EAAE;IApCf,CADQ;EAFC,CAAb;EA4CA,MAAMC,OAAO,GAAG;IACdC,mBAAmB,EAAE,KADP;IAEdC,UAAU,EAAE,IAFE;IAIdC,MAAM,EAAE;MACNhB,MAAM,EAAE;QACNiB,IAAI,EAAE;UACJC,IAAI,EAAE;QADF;MADA;IADF;EAJM,CAAhB;EAaA,oBACE;IAAA,uBACE,QAAC,QAAD;MAAU,OAAO,EAAEL,OAAnB;MAA4B,MAAM,EAAE,GAApC;MAAyC,KAAK,EAAE,GAAhD;MAAqD,IAAI,EAAEZ;IAA3D;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAtED;;KAAMN,a;AAwEN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}