{"ast":null,"code":"import React from'react';import{LineElement,CategoryScale,LinearScale,PointElement,Chart as ChartJS}from'chart.js';import{Line}from'react-chartjs-2';import{jsx as _jsx}from\"react/jsx-runtime\";ChartJS.register(LineElement,CategoryScale,LinearScale,PointElement);var LineChart=function LineChart(_ref){var country=_ref.country,setCountry=_ref.setCountry,chosenCountry=_ref.chosenCountry,setChosenCountry=_ref.setChosenCountry;var labels=['Population','Cases','Recovered','Deaths'];var data={labels:labels,datasets:[{label:chosenCountry.response?chosenCountry.response[0].country:'USA',data:[chosenCountry.response?chosenCountry.response[0].population:'Population',chosenCountry.response?chosenCountry.response[0].cases.total:'Cases',chosenCountry.response?chosenCountry.response[0].cases.recovered:'Recovered',chosenCountry.response?chosenCountry.response[0].deaths.total:'Deaths'],backgroundColor:['rgba(255, 99, 132, 0.2)','rgba(255, 159, 64, 0.2)','rgba(255, 205, 86, 0.2)','rgba(75, 192, 192, 0.2)','rgba(54, 162, 235, 0.2)','rgba(153, 102, 255, 0.2)','rgba(201, 203, 207, 0.2)'],borderColor:['rgb(255, 99, 132)','rgb(255, 159, 64)','rgb(255, 205, 86)','rgb(75, 192, 192)','rgb(54, 162, 235)','rgb(153, 102, 255)','rgb(201, 203, 207)'],borderWidth:1}]};var options={maintainAspectRatio:false,responsive:true,legend:{labels:{font:{size:20}}}};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Line,{options:options,height:400,width:600,data:data})});};export default LineChart;","map":{"version":3,"names":["React","LineElement","CategoryScale","LinearScale","PointElement","Chart","ChartJS","Line","register","LineChart","country","setCountry","chosenCountry","setChosenCountry","labels","data","datasets","label","response","population","cases","total","recovered","deaths","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","responsive","legend","font","size"],"sources":["/Users/johnalvarez/Desktop/react project folder/login firebase graphs/src/Charts/LineChart.js"],"sourcesContent":["import React from 'react';\nimport {\n  LineElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  Chart as ChartJS,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement);\n\nconst LineChart = ({\n  country,\n  setCountry,\n  chosenCountry,\n  setChosenCountry,\n}) => {\n  const labels = ['Population', 'Cases', 'Recovered', 'Deaths'];\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        label: chosenCountry.response\n          ? chosenCountry.response[0].country\n          : 'USA',\n        data: [\n          chosenCountry.response\n            ? chosenCountry.response[0].population\n            : 'Population',\n          chosenCountry.response\n            ? chosenCountry.response[0].cases.total\n            : 'Cases',\n          chosenCountry.response\n            ? chosenCountry.response[0].cases.recovered\n            : 'Recovered',\n          chosenCountry.response\n            ? chosenCountry.response[0].deaths.total\n            : 'Deaths',\n        ],\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(255, 159, 64, 0.2)',\n          'rgba(255, 205, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(201, 203, 207, 0.2)',\n        ],\n        borderColor: [\n          'rgb(255, 99, 132)',\n          'rgb(255, 159, 64)',\n          'rgb(255, 205, 86)',\n          'rgb(75, 192, 192)',\n          'rgb(54, 162, 235)',\n          'rgb(153, 102, 255)',\n          'rgb(201, 203, 207)',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    maintainAspectRatio: false,\n    responsive: true,\n\n    legend: {\n      labels: {\n        font: {\n          size: 20,\n        },\n      },\n    },\n  };\n\n  return (\n    <div>\n      <Line options={options} height={400} width={600} data={data} />\n    </div>\n  );\n};\n\nexport default LineChart;\n"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OACEC,WADF,CAEEC,aAFF,CAGEC,WAHF,CAIEC,YAJF,CAKEC,KAAK,GAAIC,QALX,KAMO,UANP,CAOA,OAASC,IAAT,KAAqB,iBAArB,C,2CAEAD,OAAO,CAACE,QAAR,CAAiBP,WAAjB,CAA8BC,aAA9B,CAA6CC,WAA7C,CAA0DC,YAA1D,EAEA,GAAMK,UAAS,CAAG,QAAZA,UAAY,MAKZ,IAJJC,QAII,MAJJA,OAII,CAHJC,UAGI,MAHJA,UAGI,CAFJC,aAEI,MAFJA,aAEI,CADJC,gBACI,MADJA,gBACI,CACJ,GAAMC,OAAM,CAAG,CAAC,YAAD,CAAe,OAAf,CAAwB,WAAxB,CAAqC,QAArC,CAAf,CAEA,GAAMC,KAAI,CAAG,CACXD,MAAM,CAAEA,MADG,CAEXE,QAAQ,CAAE,CACR,CACEC,KAAK,CAAEL,aAAa,CAACM,QAAd,CACHN,aAAa,CAACM,QAAd,CAAuB,CAAvB,EAA0BR,OADvB,CAEH,KAHN,CAIEK,IAAI,CAAE,CACJH,aAAa,CAACM,QAAd,CACIN,aAAa,CAACM,QAAd,CAAuB,CAAvB,EAA0BC,UAD9B,CAEI,YAHA,CAIJP,aAAa,CAACM,QAAd,CACIN,aAAa,CAACM,QAAd,CAAuB,CAAvB,EAA0BE,KAA1B,CAAgCC,KADpC,CAEI,OANA,CAOJT,aAAa,CAACM,QAAd,CACIN,aAAa,CAACM,QAAd,CAAuB,CAAvB,EAA0BE,KAA1B,CAAgCE,SADpC,CAEI,WATA,CAUJV,aAAa,CAACM,QAAd,CACIN,aAAa,CAACM,QAAd,CAAuB,CAAvB,EAA0BK,MAA1B,CAAiCF,KADrC,CAEI,QAZA,CAJR,CAkBEG,eAAe,CAAE,CACf,yBADe,CAEf,yBAFe,CAGf,yBAHe,CAIf,yBAJe,CAKf,yBALe,CAMf,0BANe,CAOf,0BAPe,CAlBnB,CA2BEC,WAAW,CAAE,CACX,mBADW,CAEX,mBAFW,CAGX,mBAHW,CAIX,mBAJW,CAKX,mBALW,CAMX,oBANW,CAOX,oBAPW,CA3Bf,CAoCEC,WAAW,CAAE,CApCf,CADQ,CAFC,CAAb,CA4CA,GAAMC,QAAO,CAAG,CACdC,mBAAmB,CAAE,KADP,CAEdC,UAAU,CAAE,IAFE,CAIdC,MAAM,CAAE,CACNhB,MAAM,CAAE,CACNiB,IAAI,CAAE,CACJC,IAAI,CAAE,EADF,CADA,CADF,CAJM,CAAhB,CAaA,mBACE,kCACE,KAAC,IAAD,EAAM,OAAO,CAAEL,OAAf,CAAwB,MAAM,CAAE,GAAhC,CAAqC,KAAK,CAAE,GAA5C,CAAiD,IAAI,CAAEZ,IAAvD,EADF,EADF,CAKD,CAtED,CAwEA,cAAeN,UAAf"},"metadata":{},"sourceType":"module"}