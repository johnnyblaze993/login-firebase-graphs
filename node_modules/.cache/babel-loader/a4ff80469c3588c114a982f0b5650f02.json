{"ast":null,"code":"var _jsxFileName = \"/Users/johnalvarez/Desktop/react project folder/01-starting-setup copy 32/src/pages/Datas.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { motion } from 'framer-motion/dist/framer-motion';\nimport { Autocomplete, TextField } from '@mui/material';\nimport { useFormik } from 'formik'; // import { Chart as ChartJS } from 'chart.js/auto';\n\nimport BarChart from '../Charts/BarChart';\nimport DoughnutChart from '../Charts/DoughnutChart';\nimport LineChart from '../Charts/LineChart';\nimport PieChart from '../Charts/PieChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Datas = _ref => {\n  _s();\n\n  let {\n    country,\n    setCountry,\n    chosenCountry,\n    setChosenCountry\n  } = _ref;\n  const formik = useFormik({\n    initialValues: {\n      country: ''\n    },\n    onSubmit: (event, values) => {\n      formik.resetForm();\n      event.preventDefault();\n    }\n  });\n  const URL = `https://covid-193.p.rapidapi.com/statistics?country=${formik.values.country ? formik.values.country : 'USA'}`;\n  const option1 = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': '1c4df70196mshb2a318dd821411dp18070ajsn28731e4daf63',\n      'X-RapidAPI-Host': 'covid-193.p.rapidapi.com'\n    }\n  };\n  useEffect(() => {\n    fetch('https://covid-193.p.rapidapi.com/countries', option1).then(response => response.json()).then(response => setCountry(response.response)).catch(err => console.error(err));\n  }, []);\n  const option2 = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': '1c4df70196mshb2a318dd821411dp18070ajsn28731e4daf63',\n      'X-RapidAPI-Host': 'covid-193.p.rapidapi.com'\n    }\n  };\n  useEffect(() => {\n    fetch(URL, option2).then(response => response.json()).then(response => setChosenCountry(response)).catch(err => console.error(err));\n  }, []);\n  console.log(chosenCountry); //create data for chart with population and cases\n  // const data = {\n  //   labels: ['Population', 'Cases', 'Recovered', 'Deaths'],\n  //   datasets: [\n  //     {\n  //       //chosenCountry.response[0].country,\n  //       label: 'Population',\n  //       data: [\n  //         chosenCountry.response\n  //           ? chosenCountry.response[0].population\n  //           : 'Population',\n  //         chosenCountry.response\n  //           ? chosenCountry.response[0].cases.total\n  //           : 'Cases',\n  //         chosenCountry.response\n  //           ? chosenCountry.response[0].cases.recovered\n  //           : 'Recovered',\n  //         chosenCountry.response\n  //           ? chosenCountry.response[0].deaths.total\n  //           : 'Deaths',\n  //       ],\n  //       backgroundColor: [\n  //         'rgba(255, 99, 132, 0.2)',\n  //         'rgba(54, 162, 235, 0.2)',\n  //         'rgba(255, 206, 86, 0.2)',\n  //         'rgba(75, 192, 192, 0.2)',\n  //       ],\n  //       borderColor: [\n  //         'rgba(255, 99, 132, 1)',\n  //         'rgba(54, 162, 235, 1)',\n  //         'rgba(255, 206, 86, 1)',\n  //         'rgba(75, 192, 192, 1)',\n  //         'rgba(153, 102, 255, 1)',\n  //         'rgba(255, 159, 64, 1)',\n  //       ],\n  //       borderWidth: 1,\n  //     },\n  //   ],\n  // };\n\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"container text-center\",\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    transition: {\n      duration: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Covid-19 World Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      style: {\n        display: 'block',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        gap: '1rem',\n        width: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        disablePortal: true,\n        id: \"country\",\n        name: \"country\",\n        value: formik.values.country,\n        options: country,\n        fullWidth: true,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          label: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 36\n        }, this),\n        onChange: (event, value) => {\n          formik.setFieldValue('country', value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Optio mollitia in minima architecto odit sunt enim quidem blanditiis voluptates, provident veritatis labore. Natus pariatur eos at nemo, officia voluptatibus accusamus.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      country: country,\n      setCountry: setCountry,\n      chosenCountry: chosenCountry,\n      setChosenCountry: setChosenCountry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DoughnutChart, {\n      country: country,\n      setCountry: setCountry,\n      chosenCountry: chosenCountry,\n      setChosenCountry: setChosenCountry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      country: country,\n      setCountry: setCountry,\n      chosenCountry: chosenCountry,\n      setChosenCountry: setChosenCountry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n      country: country,\n      setCountry: setCountry,\n      chosenCountry: chosenCountry,\n      setChosenCountry: setChosenCountry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Datas, \"qPhvGVp5COsA1NRAuLmgGkWakj4=\", false, function () {\n  return [useFormik];\n});\n\n_c = Datas;\nexport default Datas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Datas\");","map":{"version":3,"names":["React","useEffect","motion","Autocomplete","TextField","useFormik","BarChart","DoughnutChart","LineChart","PieChart","Datas","country","setCountry","chosenCountry","setChosenCountry","formik","initialValues","onSubmit","event","values","resetForm","preventDefault","URL","option1","method","headers","fetch","then","response","json","catch","err","console","error","option2","log","opacity","duration","handleSubmit","display","flexDirection","alignItems","justifyContent","gap","width","params","value","setFieldValue"],"sources":["/Users/johnalvarez/Desktop/react project folder/01-starting-setup copy 32/src/pages/Datas.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { motion } from 'framer-motion/dist/framer-motion';\n\nimport { Autocomplete, TextField } from '@mui/material';\nimport { useFormik } from 'formik';\n\n// import { Chart as ChartJS } from 'chart.js/auto';\nimport BarChart from '../Charts/BarChart';\nimport DoughnutChart from '../Charts/DoughnutChart';\nimport LineChart from '../Charts/LineChart';\nimport PieChart from '../Charts/PieChart';\n\nconst Datas = ({ country, setCountry, chosenCountry, setChosenCountry }) => {\n  const formik = useFormik({\n    initialValues: {\n      country: '',\n    },\n\n    onSubmit: (event, values) => {\n      formik.resetForm();\n      event.preventDefault();\n    },\n  });\n\n  const URL = `https://covid-193.p.rapidapi.com/statistics?country=${\n    formik.values.country ? formik.values.country : 'USA'\n  }`;\n\n  const option1 = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': '1c4df70196mshb2a318dd821411dp18070ajsn28731e4daf63',\n      'X-RapidAPI-Host': 'covid-193.p.rapidapi.com',\n    },\n  };\n  useEffect(() => {\n    fetch('https://covid-193.p.rapidapi.com/countries', option1)\n      .then((response) => response.json())\n      .then((response) => setCountry(response.response))\n      .catch((err) => console.error(err));\n  }, []);\n\n  const option2 = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': '1c4df70196mshb2a318dd821411dp18070ajsn28731e4daf63',\n      'X-RapidAPI-Host': 'covid-193.p.rapidapi.com',\n    },\n  };\n  useEffect(() => {\n    fetch(URL, option2)\n      .then((response) => response.json())\n      .then((response) => setChosenCountry(response))\n      .catch((err) => console.error(err));\n  }, []);\n\n  console.log(chosenCountry);\n\n  //create data for chart with population and cases\n  // const data = {\n  //   labels: ['Population', 'Cases', 'Recovered', 'Deaths'],\n\n  //   datasets: [\n  //     {\n  //       //chosenCountry.response[0].country,\n  //       label: 'Population',\n\n  //       data: [\n  //         chosenCountry.response\n  //           ? chosenCountry.response[0].population\n  //           : 'Population',\n  //         chosenCountry.response\n  //           ? chosenCountry.response[0].cases.total\n  //           : 'Cases',\n  //         chosenCountry.response\n  //           ? chosenCountry.response[0].cases.recovered\n  //           : 'Recovered',\n  //         chosenCountry.response\n  //           ? chosenCountry.response[0].deaths.total\n  //           : 'Deaths',\n  //       ],\n\n  //       backgroundColor: [\n  //         'rgba(255, 99, 132, 0.2)',\n  //         'rgba(54, 162, 235, 0.2)',\n  //         'rgba(255, 206, 86, 0.2)',\n  //         'rgba(75, 192, 192, 0.2)',\n  //       ],\n\n  //       borderColor: [\n  //         'rgba(255, 99, 132, 1)',\n  //         'rgba(54, 162, 235, 1)',\n  //         'rgba(255, 206, 86, 1)',\n  //         'rgba(75, 192, 192, 1)',\n  //         'rgba(153, 102, 255, 1)',\n  //         'rgba(255, 159, 64, 1)',\n  //       ],\n  //       borderWidth: 1,\n  //     },\n  //   ],\n  // };\n\n  return (\n    <motion.div\n      className=\"container text-center\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 1 }}\n    >\n      <h1>Covid-19 World Data</h1>\n\n      <form\n        onSubmit={formik.handleSubmit}\n        style={{\n          display: 'block',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          gap: '1rem',\n          width: 'auto',\n        }}\n      >\n        <Autocomplete\n          disablePortal\n          id=\"country\"\n          name=\"country\"\n          value={formik.values.country}\n          options={country}\n          fullWidth\n          renderInput={(params) => <TextField {...params} label=\"Country\" />}\n          onChange={(event, value) => {\n            formik.setFieldValue('country', value);\n          }}\n        />\n      </form>\n      <p>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Optio mollitia\n        in minima architecto odit sunt enim quidem blanditiis voluptates,\n        provident veritatis labore. Natus pariatur eos at nemo, officia\n        voluptatibus accusamus.\n      </p>\n      <BarChart\n        country={country}\n        setCountry={setCountry}\n        chosenCountry={chosenCountry}\n        setChosenCountry={setChosenCountry}\n      />\n      <DoughnutChart\n        country={country}\n        setCountry={setCountry}\n        chosenCountry={chosenCountry}\n        setChosenCountry={setChosenCountry}\n      />\n      <LineChart\n        country={country}\n        setCountry={setCountry}\n        chosenCountry={chosenCountry}\n        setChosenCountry={setChosenCountry}\n      />\n      <PieChart\n        country={country}\n        setCountry={setCountry}\n        chosenCountry={chosenCountry}\n        setChosenCountry={setChosenCountry}\n      />\n    </motion.div>\n  );\n};\n\nexport default Datas;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}